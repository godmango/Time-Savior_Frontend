[{"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\index.js":"1","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\App.js":"2","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\store.js":"3","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\routes\\PublicLayout.js":"4","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\index.js":"5","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\LoginPage.js":"6","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\HomePage.js":"7","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\NotFoundPage.js":"8","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\RegisterPage.js":"9","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\PublicNavbar.js":"10","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\auth.reducer.js":"11","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\YouTubeVideoLoader.js":"12","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\TodoList.js":"13","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\auth.actions.js":"14","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\auth.constants.js":"15","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\route.actions.js":"16","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\apiService.js":"17","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\route.constants.js":"18","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\route.reducer.js":"19","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\DigitalClock.js":"20","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\Memo.js":"21","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\GlobalChat.js":"22","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\ConversationList.js":"23","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\Message.js":"24","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\user.reducer.js":"25","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\config\\constants.js":"26","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\user.constants.js":"27","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\user.actions.js":"28"},{"size":271,"mtime":1613961981395,"results":"29","hashOfConfig":"30"},{"size":1148,"mtime":1613961975494,"results":"31","hashOfConfig":"30"},{"size":358,"mtime":1610007331966,"results":"32","hashOfConfig":"30"},{"size":932,"mtime":1614204093242,"results":"33","hashOfConfig":"30"},{"size":282,"mtime":1613962135277,"results":"34","hashOfConfig":"30"},{"size":3347,"mtime":1613978338952,"results":"35","hashOfConfig":"30"},{"size":669,"mtime":1613909358692,"results":"36","hashOfConfig":"30"},{"size":376,"mtime":1610014201959,"results":"37","hashOfConfig":"30"},{"size":3996,"mtime":1613961824529,"results":"38","hashOfConfig":"30"},{"size":2681,"mtime":1613966306236,"results":"39","hashOfConfig":"30"},{"size":3263,"mtime":1613962126678,"results":"40","hashOfConfig":"30"},{"size":4208,"mtime":1613962042282,"results":"41","hashOfConfig":"30"},{"size":3648,"mtime":1613962036775,"results":"42","hashOfConfig":"30"},{"size":4018,"mtime":1614205396197,"results":"43","hashOfConfig":"30"},{"size":1426,"mtime":1613962063355,"results":"44","hashOfConfig":"30"},{"size":325,"mtime":1610088997826,"results":"45","hashOfConfig":"30"},{"size":1168,"mtime":1613961959059,"results":"46","hashOfConfig":"30"},{"size":120,"mtime":1610088989579,"results":"47","hashOfConfig":"30"},{"size":463,"mtime":1610088979472,"results":"48","hashOfConfig":"30"},{"size":1486,"mtime":1613961563972,"results":"49","hashOfConfig":"30"},{"size":1205,"mtime":1613960645301,"results":"50","hashOfConfig":"30"},{"size":5061,"mtime":1613973070807,"results":"51","hashOfConfig":"30"},{"size":4691,"mtime":1613972234899,"results":"52","hashOfConfig":"30"},{"size":1100,"mtime":1613960670100,"results":"53","hashOfConfig":"30"},{"size":1213,"mtime":1613768746693,"results":"54","hashOfConfig":"30"},{"size":596,"mtime":1613768448254,"results":"55","hashOfConfig":"30"},{"size":410,"mtime":1613768832352,"results":"56","hashOfConfig":"30"},{"size":1521,"mtime":1613768864095,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"oex22n",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\index.js",[],["121","122"],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\App.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\store.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\routes\\PublicLayout.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\LoginPage.js",["123","124","125","126","127"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport authActions from \"../redux/actions/auth.actions\";\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // const [theme, setTheme] = useState(\"light\");\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const loading = useSelector((state) => state.auth.loading);\r\n\r\n  // const themifyButton = () => {\r\n  //   if (theme === \"light\") {\r\n  //     setTheme(\"dark\");\r\n  //   } else {\r\n  //     setTheme(\"light\");\r\n  //   }\r\n  // };\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formData;\r\n    if (password.length < 3) {\r\n      setErrors({ ...errors, password: \"Password must be longer than 3\" });\r\n      return;\r\n    }\r\n    dispatch(authActions.loginRequest({ email, password }));\r\n  };\r\n  if (isAuthenticated) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div div className=\"signUpSize\">\r\n      {/* <Row>\r\n        <Col md={{ span: 6, offset: 3 }}> */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <div className=\"text-center \">\r\n          <h1 className=\"fontChange\">Sign In</h1>\r\n          <p className=\"fontChange\">Sign Into Your Account</p>\r\n        </div>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && (\r\n            <small className=\"form-text text-danger\">{errors.email}</small>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            minLength=\"3\"\r\n          />\r\n          {errors.password && (\r\n            <small className=\"form-text text-danger\">{errors.password}</small>\r\n          )}\r\n        </Form.Group>\r\n        {loading ? (\r\n          <button\r\n            className=\"btn-block\"\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            disabled\r\n          >\r\n            <span\r\n              className=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            Loading...\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn-block\" type=\"submit\" variant=\"primary\">\r\n            Login\r\n          </button>\r\n        )}\r\n        <p>\r\n          Don't have an account?{\" \"}\r\n          <a className=\"hyperlinkSignup\" href=\"/register\">\r\n            Sign Up\r\n          </a>\r\n        </p>\r\n      </Form>\r\n      {/* </Col>\r\n      </Row> */}\r\n      {/* <div className={theme}>some random words</div>\r\n      <button onClick={themifyButton}>themify</button> */}\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\HomePage.js",["128","129","130"],"import React, { useState, useEffect } from \"react\";\r\nimport YouTubeVideoLoader from \"../components/YouTubeVideoLoader\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport DigitalClock from \"../components/DigitalClock\";\r\nimport Memo from \"../components/Memo\";\r\nimport GlobalChat from \"../components/GlobalChat\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"maxHomepage\">\r\n      <DigitalClock />\r\n      <div className=\"maxTopHalf\">\r\n        {/* <TodoList /> */}\r\n        <Memo />\r\n        <YouTubeVideoLoader />\r\n      </div>\r\n      <div className=\"maxGlobal\">\r\n        <GlobalChat />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\pages\\RegisterPage.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\PublicNavbar.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\auth.reducer.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\YouTubeVideoLoader.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\TodoList.js",["131","132","133"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Checkbox } from \"pretty-checkbox-react\";\r\nimport authActions from \"../redux/actions/auth.actions\";\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  const currentTheme = useSelector((state) => state.auth.theme);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const currentAuth = useSelector((state) => state.auth);\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n  const loginWithLocalStorage = useSelector(\r\n    (state) => state.auth.loggedInWithLocalStorage\r\n  );\r\n  const [fullList, setFullList] = useState([]);\r\n  const [errors, setErrors] = useState(\"\");\r\n  const renderCount = useRef(0);\r\n  const singleTodo = useRef(\"\");\r\n\r\n  renderCount.current = renderCount.current + 1;\r\n\r\n  useEffect(() => {\r\n    if (currentAuth && currentUser !== null && isAuthenticated) {\r\n      setFullList(currentUser.settings.todoList);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const handleInput = (e) => {\r\n    singleTodo.current = e.target.value;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (singleTodo.current === \"\") {\r\n      setErrors(\"Your input is empty\");\r\n      return;\r\n    }\r\n    setErrors(\"\");\r\n    setFullList(fullList.concat([singleTodo.current]));\r\n    singleTodo.current = \"\";\r\n    e.target.reset();\r\n  };\r\n  const handleClick = (e) => {\r\n    e.target.parentNode[0].focus();\r\n  };\r\n\r\n  const handleDelButton = (index) => {\r\n    let newList = Object.assign([], fullList);\r\n    newList.splice(index, 1);\r\n\r\n    setFullList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (renderCount.current > 1 &&\r\n        loginWithLocalStorage === false &&\r\n        isAuthenticated) ||\r\n      (renderCount.current > 4 &&\r\n        isAuthenticated &&\r\n        loginWithLocalStorage === true)\r\n    ) {\r\n      dispatch(authActions.addTodos(fullList, currentUser._id));\r\n    } else {\r\n      return;\r\n    }\r\n  }, [fullList]);\r\n  useEffect(() => {\r\n    if (currentUser === null) {\r\n      setFullList([]);\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <div className=\"todoBig\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className={`todoInput${currentTheme}`}\r\n          type=\"text\"\r\n          placeholder=\"What to do?\"\r\n          onInput={handleInput}\r\n        />\r\n        <button\r\n          className={`todoAddButton${currentTheme}`}\r\n          type=\"submit\"\r\n          onClick={handleClick}\r\n        >\r\n          add\r\n        </button>\r\n      </form>\r\n      {errors && <small className=\"form-text text-danger\">{errors}</small>}\r\n      <div className={`todoListSize${currentTheme}`}>\r\n        {currentUser !== null ? (\r\n          currentUser.settings.todoList.map((todos, index) => (\r\n            <div key={index}>\r\n              <Checkbox> {todos}</Checkbox>\r\n              <button\r\n                className={`todoDelete${currentTheme}`}\r\n                onClick={() => handleDelButton(index)}\r\n              >\r\n                delete\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : fullList && fullList !== [] ? (\r\n          fullList.map((todos, index) => (\r\n            <div key={index}>\r\n              <Checkbox> {todos}</Checkbox>\r\n              <button\r\n                className={`todoDelete${currentTheme}`}\r\n                onClick={() => handleDelButton(index)}\r\n              >\r\n                delete\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\auth.actions.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\auth.constants.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\route.actions.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\apiService.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\route.constants.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\route.reducer.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\DigitalClock.js",["134"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DigitalClock = () => {\r\n  const currentTheme = useSelector((state) => state.auth.theme);\r\n  const [nowTime, setNowTime] = useState(\"\");\r\n  const updatedTime = () => {\r\n    let time = new Date();\r\n    let day = time.getDay();\r\n    let date = time.getDate();\r\n    let month = time.getMonth();\r\n    let year = time.getFullYear();\r\n    let allDays = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    let allMonths = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let h = time.getHours();\r\n    let amPm;\r\n    if (h > 12) {\r\n      amPm = \"PM\";\r\n    } else {\r\n      amPm = \"AM\";\r\n    }\r\n    let twelveH = h % 12;\r\n    if (twelveH) {\r\n      twelveH = twelveH;\r\n    } else {\r\n      twelveH = 12;\r\n    }\r\n\r\n    let min = time.getMinutes();\r\n    let sec = time.getSeconds();\r\n    let zero;\r\n    if (sec < 10) {\r\n      zero = 0;\r\n    } else {\r\n      zero = \"\";\r\n    }\r\n    setNowTime(`${allDays[day]} ${year}/${allMonths[month]}/${date}\r\n    ${amPm} ${twelveH}:${min}:${zero}${sec}`);\r\n  };\r\n\r\n  setInterval(updatedTime, 1000);\r\n\r\n  return (\r\n    <div>\r\n      <div className={`digiClock${currentTheme}`}>{nowTime}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DigitalClock;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\Memo.js",["135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport authActions from \"../redux/actions/auth.actions\";\r\n\r\nconst Memo = () => {\r\n  const dispatch = useDispatch();\r\n  const currentTheme = useSelector((state) => state.auth.theme);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const currentUser = useSelector((state) => state.auth);\r\n  const [memoWords, setMemoWords] = useState(\"\");\r\n  const handleInput = (e) => {\r\n    setMemoWords(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser.user !== null && isAuthenticated) {\r\n      document.getElementById(\"memoBox\").value =\r\n        currentUser.user.settings.memoList;\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(authActions.addMemo(memoWords, currentUser.user._id));\r\n    } else {\r\n      return;\r\n    }\r\n  }, [memoWords]);\r\n\r\n  return (\r\n    <div className=\"memoBig\">\r\n      <textarea\r\n        className={`memoBox${currentTheme}`}\r\n        id=\"memoBox\"\r\n        placeholder=\"Memo to self...\"\r\n        onInput={handleInput}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memo;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\GlobalChat.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\ConversationList.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\n// import SearchItem from \"./SearchItem\";\r\n// import PaginationItem from \"./PaginationItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport userActions from \"../redux/actions/user.actions\";\r\nimport { Row, Col, Container, Table, Tabs, Tab, Media } from \"react-bootstrap\";\r\nimport Moment from \"react-moment\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport { messengerTabNames, conversationTypes } from \"../config/constants\";\r\n\r\nconst ConversationList = ({\r\n  onlineUsers,\r\n  handleClickFriend,\r\n  handleClickConversation,\r\n}) => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const totalPageNum = useSelector((state) => state.user.totalPageNum);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [tabKey, setTabKey] = useState(messengerTabNames.CONVERSATIONS);\r\n  const dispatch = useDispatch();\r\n  const currentTheme = useSelector((state) => state.auth.theme);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n  const loading = useSelector((state) => state.user.loading);\r\n  const users = useSelector((state) => state.user.users);\r\n  const conversations = useSelector((state) => state.user.conversations);\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n  const handleSubmitSearch = (e) => {\r\n    e.preventDefault();\r\n    setPageNum(1);\r\n    setQuery(searchInput);\r\n  };\r\n\r\n  const handleChangeTab = (key) => {\r\n    setTabKey(key);\r\n    setPageNum(1);\r\n  };\r\n\r\n  // console.log(\"the online users\", onlineUsers);\r\n  useEffect(() => {\r\n    // if (isAuthenticated) {\r\n    dispatch(userActions.usersRequest(pageNum, 20, query));\r\n    // console.log(users);\r\n    // console.log(\r\n    //   \"the map thing\",\r\n    //   users.map((user) => (\r\n    //     <tr key={user._id}>\r\n    //       <td>\r\n    //         <span>{user.name}</span>\r\n    //         {onlineUsers.includes(user._id) ? (\r\n    //           <span className=\"text-success\"> - online</span>\r\n    //         ) : (\r\n    //           <span className=\"text-muted\"> - offline</span>\r\n    //         )}\r\n    //       </td>\r\n    //     </tr>\r\n    //   ))\r\n    // );\r\n    // }\r\n  }, []);\r\n  // console.log(isAuthenticated ? users : \"nobody\");\r\n  console.log(\"off or on\", onlineUsers);\r\n  return (\r\n    <Container className=\"onOffUsers\">\r\n      {/* <Row className=\"mb-2\">\r\n        <Col>\r\n          <SearchItem\r\n            searchInput={searchInput}\r\n            handleInputChange={handleInputChange}\r\n            handleSubmit={handleSubmitSearch}\r\n            loading={loading}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n\r\n      {/* <Tabs activeKey={tabKey} onSelect={(k) => handleChangeTab(k)}>\r\n        <Tab\r\n          eventKey={messengerTabNames.CONVERSATIONS}\r\n          title=\"Conversations\"\r\n        ></Tab>\r\n        <Tab eventKey={messengerTabNames.USERS} title=\"Users\"></Tab>\r\n      </Tabs> */}\r\n\r\n      {/* <Table striped bordered className=\"onOffUsers table-sm\">\r\n            <tbody>\r\n              {\r\n                // tabKey === messengerTabNames.USERS\r\n                //   ?\r\n\r\n                users.map((user) => (\r\n                  <tr\r\n                    key={user._id}\r\n                    className=\"mouse-hover\"\r\n                    onClick={() => handleClickFriend(user)}\r\n                  >\r\n                    <td>\r\n                      <span>{user.name}</span>\r\n                      {onlineUsers.includes(user._id) ? (\r\n                        <span className=\"text-success\"> - online</span>\r\n                      ) : (\r\n                        <span className=\"text-muted\"> - offline</span>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </Table> */}\r\n      {\r\n        // tabKey === messengerTabNames.USERS\r\n        //   ?\r\n\r\n        users.map((user) => (\r\n          <div key={user._id} onClick={() => handleClickFriend(user)}>\r\n            <span className=\"onOffUserId\">{user.name}</span>\r\n            {onlineUsers.includes(user._id) ? (\r\n              <span className={`userIsOnline${currentTheme}`}> - online</span>\r\n            ) : (\r\n              <span> - offline</span>\r\n            )}\r\n          </div>\r\n        ))\r\n      }\r\n\r\n      {/* <Row>\r\n        <Col>\r\n          <PaginationItem\r\n            pageNum={pageNum}\r\n            setPageNum={setPageNum}\r\n            totalPageNum={totalPageNum}\r\n            loading={loading}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n","C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\components\\Message.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\reducers\\user.reducer.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\config\\constants.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\constants\\user.constants.js",[],"C:\\Users\\Codeschool\\Desktop\\cheetah\\screen-savior\\client\\src\\redux\\actions\\user.actions.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":19},{"ruleId":"160","severity":1,"message":"164","line":2,"column":21,"nodeType":"162","messageId":"163","endLine":2,"endColumn":24},{"ruleId":"160","severity":1,"message":"165","line":2,"column":26,"nodeType":"162","messageId":"163","endLine":2,"endColumn":29},{"ruleId":"160","severity":1,"message":"166","line":2,"column":37,"nodeType":"162","messageId":"163","endLine":2,"endColumn":43},{"ruleId":"160","severity":1,"message":"167","line":3,"column":20,"nodeType":"162","messageId":"163","endLine":3,"endColumn":24},{"ruleId":"160","severity":1,"message":"168","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"169","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"170","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":26,"column":6,"nodeType":"173","endLine":26,"endColumn":23,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":67,"column":6,"nodeType":"173","endLine":67,"endColumn":16,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"177","line":72,"column":6,"nodeType":"173","endLine":72,"endColumn":23,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":45,"column":17,"nodeType":"162","messageId":"181","endLine":45,"endColumn":24},{"ruleId":"171","severity":1,"message":"182","line":19,"column":6,"nodeType":"173","endLine":19,"endColumn":23,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"184","line":27,"column":6,"nodeType":"173","endLine":27,"endColumn":17,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"164","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"165","line":6,"column":15,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"160","severity":1,"message":"186","line":6,"column":31,"nodeType":"162","messageId":"163","endLine":6,"endColumn":36},{"ruleId":"160","severity":1,"message":"187","line":6,"column":38,"nodeType":"162","messageId":"163","endLine":6,"endColumn":42},{"ruleId":"160","severity":1,"message":"188","line":6,"column":44,"nodeType":"162","messageId":"163","endLine":6,"endColumn":47},{"ruleId":"160","severity":1,"message":"189","line":6,"column":49,"nodeType":"162","messageId":"163","endLine":6,"endColumn":54},{"ruleId":"160","severity":1,"message":"190","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":14},{"ruleId":"160","severity":1,"message":"191","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":18},{"ruleId":"160","severity":1,"message":"192","line":9,"column":29,"nodeType":"162","messageId":"163","endLine":9,"endColumn":46},{"ruleId":"160","severity":1,"message":"193","line":17,"column":9,"nodeType":"162","messageId":"163","endLine":17,"endColumn":21},{"ruleId":"160","severity":1,"message":"194","line":20,"column":10,"nodeType":"162","messageId":"163","endLine":20,"endColumn":16},{"ruleId":"160","severity":1,"message":"195","line":23,"column":9,"nodeType":"162","messageId":"163","endLine":23,"endColumn":24},{"ruleId":"160","severity":1,"message":"196","line":24,"column":9,"nodeType":"162","messageId":"163","endLine":24,"endColumn":20},{"ruleId":"160","severity":1,"message":"197","line":25,"column":9,"nodeType":"162","messageId":"163","endLine":25,"endColumn":16},{"ruleId":"160","severity":1,"message":"198","line":27,"column":9,"nodeType":"162","messageId":"163","endLine":27,"endColumn":22},{"ruleId":"160","severity":1,"message":"199","line":29,"column":9,"nodeType":"162","messageId":"163","endLine":29,"endColumn":26},{"ruleId":"160","severity":1,"message":"200","line":32,"column":9,"nodeType":"162","messageId":"163","endLine":32,"endColumn":27},{"ruleId":"160","severity":1,"message":"201","line":38,"column":9,"nodeType":"162","messageId":"163","endLine":38,"endColumn":24},{"ruleId":"171","severity":1,"message":"202","line":64,"column":6,"nodeType":"173","endLine":64,"endColumn":8,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'TodoList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentAuth' and 'currentUser'. Either include them or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has missing dependencies: 'currentUser._id', 'dispatch', 'isAuthenticated', and 'loginWithLocalStorage'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["208"],"no-self-assign","'twelveH' is assigned to itself.","selfAssignment","React Hook useEffect has a missing dependency: 'currentUser.user'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'currentUser.user._id', 'dispatch', and 'isAuthenticated'. Either include them or remove the dependency array.",["210"],"'Table' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Media' is defined but never used.","'Moment' is defined but never used.","'ReactEmoji' is defined but never used.","'conversationTypes' is defined but never used.","'totalPageNum' is assigned a value but never used.","'tabKey' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'loading' is assigned a value but never used.","'conversations' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmitSearch' is assigned a value but never used.","'handleChangeTab' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'pageNum', and 'query'. Either include them or remove the dependency array.",["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [currentAuth, currentUser, isAuthenticated]",{"range":"224","text":"225"},"Update the dependencies array to be: [currentUser._id, dispatch, fullList, isAuthenticated, loginWithLocalStorage]",{"range":"226","text":"227"},"Update the dependencies array to be: [currentUser, isAuthenticated]",{"range":"228","text":"229"},"Update the dependencies array to be: [currentUser.user, isAuthenticated]",{"range":"230","text":"231"},"Update the dependencies array to be: [currentUser.user._id, dispatch, isAuthenticated, memoWords]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch, pageNum, query]",{"range":"234","text":"235"},[1029,1046],"[currentAuth, currentUser, isAuthenticated]",[2021,2031],"[currentUser._id, dispatch, fullList, isAuthenticated, loginWithLocalStorage]",[2125,2142],"[currentUser, isAuthenticated]",[740,757],"[currentUser.user, isAuthenticated]",[924,935],"[currentUser.user._id, dispatch, isAuthenticated, memoWords]",[2289,2291],"[dispatch, pageNum, query]"]